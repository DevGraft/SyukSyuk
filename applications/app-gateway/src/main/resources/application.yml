eureka:
  instance:
    preferIpAddress: true
    instance-id: gateway-microservice-instance
    appname: gateway-service
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka #host.docker.internal

spring:
  # components:support:swagger
  main:
    allow-bean-definition-overriding: true
  # components:module:auth-store
  redis:
    host: localhost #host.docker.internal
    port: 6379
  session:
    store-type: redis
    redis:
      flush-mode: immediate
  # spring cloud gateway
  application:
    name: gateway-service
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
      default-filters:
        - name: Logging
        - RewritePath=/(?<path>.*)/v3/api-docs, /v3/api-docs
      routes:
#        - id: member-service
#          uri: lb://member-service
#          predicates:
#            - Path=/members
#            - Method=POST
#        - id: member-service
#          uri: lb://member-service
#          predicates:
#            - Path=/members/**
#          filters:
#            - SwaggerHeader
#            - StripPrefix=1

#            - name: Exclude
#              args:
#                excludeUrls:
#                  - /members/auth/**
#            - name: JwtAuthorization
#              args:
#                roles:
#                  - ROLE_MEMBER

        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/sha-test, /auth/**
#            - RewritePath=/auth/(?<path>.*), /$\{path}
#          filters:
#            - SwaggerHeader
#            - StripPrefix=1


# components:module:gateway
server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true
    session:
      timeout: 43200m
      cookie:
        max-age: 43200m
        name: SID
        http-only: true # js 조회 안됨
        secure: true # https

# components:support:token
support:
  jwt:
    secret-key: secretKey

